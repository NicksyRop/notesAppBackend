{"version":3,"sources":["components/Note.js","services/notes.js","components/AddNote.js","App.js","index.js"],"names":["Note","note","toggleImportance","label","important","content","onClick","baseUrl","axios","get","newObject","post","id","put","AddNote","props","useState","newNote","setNote","notes","setNotes","onSubmit","event","preventDefault","date","Date","Math","random","noteService","then","res","concat","data","catch","err","console","log","type","value","onChange","target","App","useEffect","response","map","find","n","changedNote","toggleImportanceOf","ReactDOM","render","document","getElementById"],"mappings":"yKAaeA,EAXF,SAAC,GAAgC,IAA9BC,EAA6B,EAA7BA,KAAMC,EAAuB,EAAvBA,iBACdC,EAAQF,EAAKG,UAAY,qBAAuB,iBAGtD,OACE,+BACGH,EAAKI,QADR,IACiB,wBAAQC,QAASJ,EAAjB,SAAoCC,Q,gBCNnDI,EAAU,aAcD,EAZA,WACb,OAAOC,IAAMC,IAAIF,IAWJ,EARA,SAACG,GACd,OAAOF,IAAMG,KAAKJ,EAASG,IAOd,EAJA,SAACE,EAAIF,GAClB,OAAOF,IAAMK,IAAN,UAAaN,EAAb,YAAwBK,GAAMF,IC6BxBI,MAtCf,SAAiBC,GAAQ,IAAD,EACKC,mBAAS,IADd,mBACfC,EADe,KACNC,EADM,OAEIF,mBAASD,EAAMI,OAFnB,mBAEfA,EAFe,KAERC,EAFQ,KA0BtB,OACE,8BACE,uBAAMC,SApBW,SAACC,GACpBA,EAAMC,iBAEN,IAAMb,EAAY,CAChBL,QAASY,EACTO,KAAM,IAAIC,KACVrB,UAAWsB,KAAKC,SAAW,IAG7BC,EACUlB,GACPmB,MAAK,SAACC,GACLV,EAASD,EAAMY,OAAOD,EAAIE,OAC1Bd,EAAQ,OAETe,OAAM,SAACC,GAAD,OAASC,QAAQC,IAAIF,OAK5B,UACE,4CACA,uBAAOG,KAAK,OAAOC,MAAOrB,EAASsB,SA1BpB,SAACjB,GACpBJ,EAAQI,EAAMkB,OAAOF,UA2BjB,wBAAQD,KAAK,SAAb,0BCIOI,EAlCH,WAAO,IAAD,EACUzB,mBAAS,IADnB,mBACTG,EADS,KACFC,EADE,KAGhBsB,qBAAU,WACRd,IAAqBC,MAAK,SAACc,GAAD,OAAcvB,EAASuB,EAASX,WACzD,IAaH,OACE,gCACE,cAAC,EAAD,CAASb,MAAOA,IAChB,uCAECA,EAAMyB,KAAI,SAAC3C,GAAD,OACT,cAAC,EAAD,CAEEA,KAAMA,EACNC,iBAAkB,kBApBC,SAACU,GAC1B,IAAMX,EAAOkB,EAAM0B,MAAK,SAACC,GAAD,OAAOA,EAAElC,KAAOA,KAClCmC,EAAW,2BAAQ9C,GAAR,IAAcG,WAAYH,EAAKG,YAEhDwB,EACUhB,EAAImC,GACXlB,MAAK,SAACc,GACLvB,EAASD,EAAMyB,KAAI,SAAC3C,GAAD,OAAWA,EAAKW,KAAOA,EAAKX,EAAO0C,EAASX,YAEhEH,MAAK,SAACK,GAAD,OAASC,QAAQC,IAAIF,MAWCc,CAAmB/C,EAAKW,MAF3CX,EAAKW,WC5BpBqC,IAASC,OAAO,cAAC,EAAD,IAASC,SAASC,eAAe,W","file":"static/js/main.82c261cd.chunk.js","sourcesContent":["import React from \"react\";\r\n\r\nconst Note = ({ note, toggleImportance }) => {\r\n  const label = note.important ? \"make not important\" : \"make important\";\r\n\r\n  const handleClick = () => {};\r\n  return (\r\n    <li>\r\n      {note.content} <button onClick={toggleImportance}>{label}</button>\r\n    </li>\r\n  );\r\n};\r\n\r\nexport default Note;\r\n","import axios from \"axios\";\r\n\r\nconst baseUrl = \"/api/notes\";\r\n\r\nconst getAll = () => {\r\n  return axios.get(baseUrl);\r\n};\r\n\r\nconst create = (newObject) => {\r\n  return axios.post(baseUrl, newObject);\r\n};\r\n\r\nconst update = (id, newObject) => {\r\n  return axios.put(`${baseUrl}/${id}`, newObject);\r\n};\r\n\r\nexport default {\r\n  getAll,\r\n  create,\r\n  update,\r\n};\r\n","import axios from \"axios\";\r\nimport React, { useState } from \"react\";\r\nimport noteService from \"../services/notes\";\r\n\r\nfunction AddNote(props) {\r\n  const [newNote, setNote] = useState(\"\");\r\n  const [notes, setNotes] = useState(props.notes);\r\n\r\n  const handleChange = (event) => {\r\n    setNote(event.target.value);\r\n  };\r\n\r\n  const handleSubmit = (event) => {\r\n    event.preventDefault();\r\n\r\n    const newObject = {\r\n      content: newNote,\r\n      date: new Date(),\r\n      important: Math.random() < 0.5,\r\n    };\r\n\r\n    noteService\r\n      .create(newObject)\r\n      .then((res) => {\r\n        setNotes(notes.concat(res.data));\r\n        setNote(\"\");\r\n      })\r\n      .catch((err) => console.log(err));\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <form onSubmit={handleSubmit}>\r\n        <label>Content</label>\r\n        <input type=\"text\" value={newNote} onChange={handleChange}></input>\r\n\r\n        <button type=\"submit\">Submit</button>\r\n      </form>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default AddNote;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport Note from \"./components/Note\";\r\nimport axios from \"axios\";\r\nimport AddNote from \"./components/AddNote\";\r\nimport noteService from \"./services/notes\";\r\n\r\nconst App = () => {\r\n  const [notes, setNotes] = useState([]);\r\n\r\n  useEffect(() => {\r\n    noteService.getAll().then((response) => setNotes(response.data));\r\n  }, []);\r\n\r\n  const toggleImportanceOf = (id) => {\r\n    const note = notes.find((n) => n.id === id);\r\n    const changedNote = { ...note, important: !note.important };\r\n\r\n    noteService\r\n      .update(id, changedNote)\r\n      .then((response) => {\r\n        setNotes(notes.map((note) => (note.id !== id ? note : response.data)));\r\n      })\r\n      .then((err) => console.log(err));\r\n  };\r\n  return (\r\n    <div>\r\n      <AddNote notes={notes} />\r\n      <h1>Notes</h1>\r\n\r\n      {notes.map((note) => (\r\n        <Note\r\n          key={note.id}\r\n          note={note}\r\n          toggleImportance={() => toggleImportanceOf(note.id)}\r\n        />\r\n      ))}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default App;\r\n","import ReactDOM from \"react-dom\";\r\nimport App from \"./App.js\";\r\n\r\nReactDOM.render(<App />, document.getElementById(\"root\"));\r\n"],"sourceRoot":""}